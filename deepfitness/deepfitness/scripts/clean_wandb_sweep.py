"""
    Interactive script for cleaning a wandb sweep.
    Given a wandb sweep id, metric names, and local wandb output folder:
    Extracts the best checkpoints in sweep according to metrics, saving to
    file, and deletes all other local files generated by sweep. 
"""
from loguru import logger
from tqdm import tqdm
import os
from collections import defaultdict
import numpy as np
import pandas as pd
import subprocess
import argparse

from hackerargs import args

import wandb
api = wandb.Api()


class WandbSweep:
    def __init__(self, sweep_id: str):
        self.sweep_id = sweep_id
        user = api.default_entity
        self.sweep = api.sweep(f'{user}/deepfitness/{sweep_id}')
    
    def get_run_ids(self) -> list[str]:
        return [run.id for run in self.sweep.runs]

    def get_results_df(self, stats: list[str]) -> pd.DataFrame:
        logger.info(f'Getting results over runs in sweep ...')
        dd = defaultdict(list)
        num_finished = 0
        for run in tqdm(self.sweep.runs):
            if run.state == 'finished':
                num_finished += 1

                hdf = run.history()
                dd['Run ID'].append(run.id)
                for stat in stats:
                    best_stat = np.nanmin(hdf[stat])
                    dd[stat].append(best_stat)
        
        logger.info(f'Total runs: {len(self.sweep.runs)}')
        logger.info(f'Found {num_finished=}')
        df = pd.DataFrame(dd)
        return df


def get_best_runs(df: pd.DataFrame, stats: list[str]):
    """ Get best run ids for each stat (lowest is best) """
    best_ids = set()
    for stat in stats:
        best_val = min(df[stat])
        run_id = df[df[stat] == best_val]['Run ID'].iloc[0]
        best_ids.add(run_id)
    return list(best_ids)


def delete_run_folders(sweep: WandbSweep, prj_folder: str) -> None:
    """ Delete all run folders created during sweep, contained in prj_folder.
    """
    run_ids = sweep.get_run_ids()
    logger.info(f'Checking for existence ...')
    exists = [os.path.isdir(prj_folder + f'/wandb/{run_id}') for run_id in run_ids]
    logger.info(sum(exists))

    logger.info(f'Deleting {sum(exists)} folders ...')
    for run_id in tqdm(run_ids):
        folder = prj_folder + f'/wandb/{run_id}/'
        cmd = f'rm -rf {folder}'
        subprocess.check_output(cmd, shell = True)
    return


def main():
    sweep_id = args.get('sweep')
    sweep = WandbSweep(sweep_id)

    stats = args.get('stats')

    prj_folder = args.get('prj_folder')
    run_ids = sweep.get_run_ids()

    # check for existence of wandb folders
    logger.info(f'Checking that sweep folders exist in {prj_folder}/wandb/ ...')
    num_exists = 0
    for run_id in tqdm(run_ids):
        if os.path.isdir(prj_folder + f'/wandb/{run_id}'):
            num_exists += 1
    logger.info(f'Found {num_exists}.')
    if num_exists == 0:
        logger.warning(f'Did not find any files. Ending.')
        return
    logger.info(f'Continue? [y]')
    if input() != 'y':
        return

    # make sweep out folder
    sweep_out_folder = f'{prj_folder}/sweep-{sweep_id}/'
    os.makedirs(sweep_out_folder, exist_ok = True)

    # get and save sweep results df
    results_df = sweep.get_results_df(stats)
    out_csv = sweep_out_folder + f'{sweep_id}.csv'
    logger.info(f'Saving results csv to {out_csv}')
    results_df.to_csv(out_csv)

    # save best runs to out folder
    best_run_ids = get_best_runs(results_df, stats)
    for best_id in best_run_ids:
        output_folder = f'{sweep_out_folder}/{best_id}/'
        os.makedirs(output_folder, exist_ok = True)
        cmd = f'cp -r {prj_folder}/wandb/{best_id}/ {output_folder}'
        try:
            subprocess.check_output(cmd, shell = True)
        except:
            pass

    # delete wandb runs in sweep
    logger.warning(f'Delete {len(run_ids)} folders from sweep {sweep_id}? [y/n]')
    if input() == 'y':
        delete_run_folders(sweep, prj_folder)
    else:
        logger.info('Not deleting ...')

    return


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description = """
            Use this script after running a wandb sweep. This script saves the
            best models for each provided stat/metric (lower=better), then
            can delete all local folders saved by all runs in the sweep.

            Given prj_folder, saves files to prj_folder/sweep-{sweep_id}/'
        """,
    )

    parser.add_argument('--sweep', required = True, 
        help = 'Wandb sweep id, e.g., efr7qgnb'
    )
    parser.add_argument('--prj_folder', required = True, 
        help = 'Local directory. Wandb sweep should have written to folders in prj_folder/wandb/'
    )
    parser.add_argument('--stats', required = True, 
        help = 'List of wandb metrics for identifying best models. Lower value = better.'
    )
    args.parse_args(parser)

    main()